class DiceBase{svg;SIDE_LENGTH;INNER_LINE_STYLE;OUTER_LINE_STYLE;viewBox;OPTIONS;mmToPxScale;infos;CONTENTS;PASTE_WIDTH;TEXT_STYLE;constructor(t,s,i,n,e,h,o,E,L,c=0,_=""){if(n.length===0)n="stroke:#555;stroke-width:0.2mm;";if(i.length===0){i="stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;"}this.svg=t;this.SIDE_LENGTH=s;this.INNER_LINE_STYLE=i;this.OUTER_LINE_STYLE=n;this.viewBox=e;this.OPTIONS=h;this.mmToPxScale=o;this.infos=E;this.CONTENTS=L;this.PASTE_WIDTH=c;this.TEXT_STYLE=_}fixTextStyle(t){if(this.TEXT_STYLE.length===0){const{FONT_SIZE:s}=this.OPTIONS;if(s.length){this.TEXT_STYLE=`font-family:"Times New Roman", "Kaiti";font-size:${/^[0-9\.]+$/.test(s)?s.concat("mm"):s};`}else{this.TEXT_STYLE=`font-family:"Times New Roman", "Kaiti";font-size:${this.SIDE_LENGTH*t}mm;`}}}draw(){this.drawGraphs();this.setTextsInfo();this.infos.forEach(({content:t,x:s,y:i,rotate:n})=>{SvgHelper.appendText(this.svg,this.TEXT_STYLE,t,s,i,n,"",null,true)})}setSvgTextInfo=SvgHelper.setSvgTextInfo;appendLine=SvgHelper.appendLine;appendCircle=SvgHelper.appendCircle;getSinByAngle(t){return Math.sin(t*Math.PI/180)}getCosByAngle(t){return Math.cos(t*Math.PI/180)}}class DiceFace4 extends DiceBase{drawGraphs(){this.fixTextStyle(.25);const t=this.SIDE_LENGTH*1.732*.5;const s=t*2;let i=0,n=0,e=0,h=0;i=this.SIDE_LENGTH*.5,n=i+this.SIDE_LENGTH,e=t,h=e;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);i=0,n=i+this.SIDE_LENGTH,e+=t,h=e;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);i=this.SIDE_LENGTH,n=this.SIDE_LENGTH*.5,e=0,h=t;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);i+=this.SIDE_LENGTH*.5,n+=this.SIDE_LENGTH*.5,e+=t,h+=t;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);i=this.SIDE_LENGTH*.5,n=this.SIDE_LENGTH,e=t,h=s;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);i+=this.SIDE_LENGTH,n+=this.SIDE_LENGTH;this.appendLine(this.svg,this.INNER_LINE_STYLE,i,n,e,h,this.viewBox);const{SIDE_LENGTH:o}=this;const E=o<3?1:o<=10?.5:.15;const L=E*this.SIDE_LENGTH;const c=L*.5;const _=L*Math.cos(30/180*Math.PI);i=0,n=this.SIDE_LENGTH*.5,e=s,h=t;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n-=c,e=h,h-=_;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n=this.SIDE_LENGTH*1-L,e=h,h=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n+=L,e=h,h+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n+=this.SIDE_LENGTH*.5,e=h,h+=t;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n+=L,e=h,h+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n=this.SIDE_LENGTH*2+c,e=h,h=s-_;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n-=c,e=h,h+=_;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n-=this.SIDE_LENGTH,e=h,h-=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n-=c,e=h,h+=_;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n=c,e=h,h-=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox);i=n,n=0,e=h,h=s;this.appendLine(this.svg,this.OUTER_LINE_STYLE,i,n,e,h,this.viewBox)}setTextsInfo(){const t=Math.sin(Math.PI*60/180);const s=Math.cos(Math.PI*60/180);const i=s*.75;const n=s*.075;const{infos:e,SIDE_LENGTH:h,setSvgTextInfo:o}=this;const E=h*i;const L=h*.5;const c=h*(1-i);const _=h*(.5+i);const a=h*1;const N=h*(1.5-i);const T=h*(1+i);const I=h*1.5;const S=h*(2-i);const p=h*(t*.5+n);const v=h*t*.85;const x=h*t*1.15;const l=h*(t*1.5-n);const g=h*(t*1.5+n);const d=h*t*1.85;[{x:a,y:v,rotate:0},{x:c,y:g,rotate:-120},{x:T,y:g,rotate:120},{x:_,y:p,rotate:120},{x:_,y:l,rotate:60},{x:I,y:d,rotate:0},{x:N,y:p,rotate:-120},{x:N,y:l,rotate:-60},{x:L,y:d,rotate:0},{x:a,y:x,rotate:-180},{x:E,y:g,rotate:120},{x:S,y:g,rotate:-120}].map(({x:t,y:s,rotate:i},n)=>{o(e[n],t,s,i)})}}class DiceFace6 extends DiceBase{drawGraphs(){this.fixTextStyle(.45);const t=this.SIDE_LENGTH*this.mmToPxScale;const s=.5;const i=t*.5;const n=this.SIDE_LENGTH*.5;this.duckTongueScale=s;const{SIDE_LENGTH:e}=this;const h=e<3?1:e<=10?.9:.75;const o=t*h;this.SIDE_LENGTH*h;const E=t*.1;const L=t-E*2;console.log(this.SIDE_LENGTH,this.mmToPxScale,t);const c=document.createElementNS(SVG_NS,"path");c.setAttribute("fill","none");c.setAttribute("stroke","#000000");c.setAttribute("d",`M 0, ${i+t} `.concat(`h ${t*2} `,`l ${E}, -${o} `,`h ${L} `,`l ${E}, ${o} `,`v -${t} `,`l ${E}, -${i} `,`h ${L} `,`l ${E}, ${i} `,`v ${t} `,`l ${E}, -${o} `,`h ${L} `,`l ${E}, ${o} `,`v ${t} `,`h -${t*2} `,`l -${E}, ${o} `,`h -${L} `,`l -${E}, -${o} `,`v ${t} `,`l -${E}, ${i} `,`h -${L} `,`l -${E}, -${i} `,`v -${t} `,`l -${E}, ${o} `,`h -${L} `,`l -${E}, -${o} `," z"));this.svg.appendChild(c);const _=this.SIDE_LENGTH*1,a=this.SIDE_LENGTH*2,N=this.SIDE_LENGTH*3,T=this.SIDE_LENGTH*4,I=this.SIDE_LENGTH*5;const S=n,p=S+this.SIDE_LENGTH,v=p+this.SIDE_LENGTH,x=v+this.SIDE_LENGTH;this.appendLine(this.svg,this.INNER_LINE_STYLE,N,T,S,S,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,a,I,p,p,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,0,N,v,v,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,a,x,x,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,_,p,v,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,a,a,p,v,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,N,p,v,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,T,T,p,v,null);this.viewBox.left=0;this.viewBox.top=0;this.viewBox.right=this.SIDE_LENGTH*5;this.viewBox.bottom=this.SIDE_LENGTH*3+this.SIDE_LENGTH*s*2}setTextsInfo(){const{infos:e,SIDE_LENGTH:t,setSvgTextInfo:h}=this;const{duckTongueScale:s}=this;const i=t*.5;const n=i+t;const o=n+t;const E=o+t;const L=t*(s+.5);const c=L+t;const _=c+t;[{x:E,y:L,rotate:180},{x:i,y:c,rotate:90},{x:n,y:c,rotate:0},{x:E,y:c,rotate:180},{x:o,y:c,rotate:-90},{x:n,y:_,rotate:0}].map(({x:t,y:s,rotate:i},n)=>{h(e[n],t,s,i)})}}class DiceFace8 extends DiceBase{drawGraphs(){this.fixTextStyle(.45);const t=this.SIDE_LENGTH*1.732*.5;const s=t*2;const i=t*3;this.appendLine(this.svg,this.INNER_LINE_STYLE,0,this.SIDE_LENGTH*2,t,t,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*.5,this.SIDE_LENGTH*2.5,s,s,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*1,this.SIDE_LENGTH*.5,t,s,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*2,this.SIDE_LENGTH*1.5,t,s,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*3,this.SIDE_LENGTH*2,t,i,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*1,this.SIDE_LENGTH*1.5,t,s,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*1.5,this.SIDE_LENGTH*2.5,0,s,null);this.appendLine(this.svg,this.INNER_LINE_STYLE,this.SIDE_LENGTH*3,this.SIDE_LENGTH*3.5,t,s,null);const{SIDE_LENGTH:n}=this;const e=n<3?1:n<=10?.5:.15;const h=e*this.SIDE_LENGTH;const o=h*.5;const E=h*Math.cos(30/180*Math.PI);let L=0,c=0,_=0,a=0;L=0,c=o,_=t,a=t-E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c=this.SIDE_LENGTH-o,_=a;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c=this.SIDE_LENGTH,_=a,a=t;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=this.SIDE_LENGTH*.5,_=a,a=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=h,_=a,a=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=this.SIDE_LENGTH*.5-o,_=a,a=t-E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=o,_=a,a+=E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=this.SIDE_LENGTH+h,_=a,a+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=this.SIDE_LENGTH*.5-h+o,_=a,a+=t-E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=o,_=a,a+=E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=this.SIDE_LENGTH,_=a,a+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=o,_=a,a+=E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c+=h-this.SIDE_LENGTH*.5-o,_=a,a+=t-E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=h,_=a,a+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=this.SIDE_LENGTH*.5,_=a,a-=t;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=o,_=a,a+=E;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=this.SIDE_LENGTH-o*2,_=a,a+=0;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);L=c,c-=o+this.SIDE_LENGTH*.5,_=a,a-=E+t;this.appendLine(this.svg,this.OUTER_LINE_STYLE,L,c,_,a,null);this.viewBox.right=this.SIDE_LENGTH*3.5+h*Math.sin(45/180*Math.PI);this.viewBox.bottom=i}setTextsInfo(){const{infos:e,SIDE_LENGTH:t,setSvgTextInfo:h}=this;const s=t*.5;const i=s;const n=i+s;const o=n+s;const E=o+s;const L=E+s;const c=L+s;const _=Math.sin(Math.PI*60/180);const a=t*_*.7;const N=t*_*1.3;const T=t*_*1.7;const I=t*_*2.3;[{x:o,y:a,rotate:0},{x:c,y:T,rotate:0},{x:E,y:T,rotate:0},{x:n,y:T,rotate:0},{x:L,y:N,rotate:180},{x:i,y:N,rotate:180},{x:o,y:N,rotate:180},{x:E,y:I,rotate:180}].map(({x:t,y:s,rotate:i},n)=>{h(e[n],t,s,i)})}}class DiceFace12 extends DiceBase{drawGraphs(){this.fixTextStyle(.45);const{SIDE_LENGTH:t}=this;const e=t<3?1:t<=10?.5:.25;const Yt=this.SIDE_LENGTH*e;const Dt=this.SIDE_LENGTH*.2;const h=Math.PI*18/180;const o=Math.PI*36/180;const E=Math.PI*54/180;const L=Math.PI*72/180;const Rt=Math.sin(h);const s=Math.sin(o);const i=Math.sin(E);const n=Math.sin(L);const wt=this.SIDE_LENGTH*.5;const Gt=this.SIDE_LENGTH*.5/Rt;const Ht=Gt*.5;const yt=this.SIDE_LENGTH*Rt;const Bt=this.SIDE_LENGTH*s;const $t=this.SIDE_LENGTH*i;const Ot=this.SIDE_LENGTH*n;const ut=Yt*Rt;const Ut=Yt*s;const ft=Yt*i;const mt=Yt*n;const Mt=Gt*n;const Pt=this.SIDE_LENGTH*2+Gt+yt;const At=mt;this.data={HALF_SIDE_LENGTH:wt,LONG_SIDE_LENGTH:Gt,HALF_LONG_SIDE_LENGTH:Ht,SIN18_MULTIPLY_SIDE_LENGTH:yt,SIN72_MULTIPLY_SIDE_LENGTH:Ot,SIN54_MULTIPLY_QUARTER_SIDE_LENGTH:ft,SECOND_GROUP_OFFSET:Pt,TOP:At};for(let rt=0;rt<2;++rt){const Xt=(rt===0?0:Pt)+mt;let t=0,s=0;let i=0,n=0;let e=0,h=0;let o=0,E=0;let L=0,c=0;let _=0,a=0;let N=0,T=0;let I=0,S=0;let p=0,v=0;let x=0,l=0;let g=0,d=0;let r=0,Y=0;let D=0,R=0;let m=0,w=0;let G=0,H=0;let y=0,B=0;let $=0,O=0;let u=0,U=0;let f=0,M=0;let P=0,A=0;if(rt===0){t=Xt+Rt*(this.SIDE_LENGTH+yt*2)+Gt;i=t+$t;L=t-$t;e=i-yt;o=L+yt;_=L-wt;N=L+wt;I=t-Gt;p=i+wt;g=i-wt;x=t+Gt;r=e+Gt;D=e+Ht;m=i+this.SIDE_LENGTH;G=o+wt;y=o-yt;$=e+yt;u=o-Gt;P=o-Ht;f=L-this.SIDE_LENGTH;s=At+Ot;n=s+Bt;c=n;h=n+Ot;E=h;a=At;T=a;S=s;v=a;d=a;l=S;Y=h;R=h+Bt;w=n;B=E+Ot;O=B;H=B+Bt;U=E;M=n;A=R}else{t=Xt+Gt+this.SIDE_LENGTH;i=t+yt;e=t-wt;L=t-this.SIDE_LENGTH;o=L-yt;_=L+wt;N=t+yt;I=L-yt;x=i+this.SIDE_LENGTH;p=t+Gt;g=t+Ht;D=e+yt;r=D+this.SIDE_LENGTH;m=r+yt;y=e-Gt;G=y+yt;$=G+this.SIDE_LENGTH;u=L-Gt;f=L-Ht;P=o-this.SIDE_LENGTH;s=At+Mt;n=s+Ot;h=s+Mt;E=n;c=s;a=At;T=c-Ot;S=T;v=s;l=n;d=s-Bt;w=h;Y=w+Ot;R=Y;H=Y;B=w;O=Y;U=v;M=d;A=E}const{svg:bt,INNER_LINE_STYLE:Ct,OUTER_LINE_STYLE:Ft,viewBox:Kt,appendLine:kt}=this;const Vt=rt===0?Ct:Ft;kt(bt,Ct,t,i,s,n,Kt);kt(bt,Ct,i,e,n,h,Kt);kt(bt,Ct,e,o,h,E,Kt);kt(bt,Ct,o,L,E,c,Kt);kt(bt,Ct,L,t,c,s,Kt);kt(bt,Ct,t,N,s,T,Kt);kt(bt,Ft,t,g,s,d,Kt);kt(bt,Ct,i,x,n,l,Kt);kt(bt,Ft,i,m,n,w,Kt);kt(bt,Ct,e,D,h,R,Kt);kt(bt,Ft,e,$,h,O,Kt);kt(bt,Ct,o,y,E,B,Kt);kt(bt,Ft,o,P,E,A,Kt);kt(bt,Ct,L,f,c,M,Kt);kt(bt,Ft,L,I,c,S,Kt);kt(bt,Vt,_,N,a,T,Kt);kt(bt,Vt,_,I,a,S,Kt);kt(bt,Vt,p,x,v,l,Kt);kt(bt,Vt,p,g,v,d,Kt);kt(bt,Vt,r,D,Y,R,Kt);kt(bt,Vt,r,m,Y,w,Kt);kt(bt,Vt,G,y,H,B,Kt);kt(bt,Vt,G,$,H,O,Kt);kt(bt,Vt,u,f,U,M,Kt);kt(bt,Ct,u,P,U,A,Kt);let X=0,b=0;let C=0,F=0;let K=0,k=0;let V=0,z=0;let W=0,Q=0;let Z=0,j=0;let q=0,J=0;let tt=0,st=0;let it=0,nt=0;let et=0,ht=0;let ot=0,Et=0;let Lt=0,ct=0;let _t=0,at=0;let Nt=0,Tt=0;let It=0,St=0;let pt=0,vt=0;let xt=0,lt=0;let gt=0,dt=0;if(rt===0){X=I-ft;b=S-Ut;C=_-Yt;q=p+Yt;F=a;J=a;K=_+ut;V=N-ut;W=g+ut;Z=p-ut;k=a-mt;z=k;Q=k;j=k;tt=x+ft;st=l-Ut;it=r+ut;nt=Y+mt;et=D+ft;ht=R+Ut;ot=$+ut;Et=O+mt;Lt=G+ft;_t=G-ft;ct=H+Ut;at=ct;Nt=y-ut;Tt=B+mt;It=P-ft;St=A+Ut;pt=u-ut;vt=U+mt;xt=u-ft;lt=U-Ut;gt=f-Yt;dt=M}kt(bt,Ft,N,g,T,d,Kt);kt(bt,Ft,x,m,l,w,Kt);kt(bt,Ft,D,$,R,O,Kt);kt(bt,Ft,y,P,B,A,Kt);kt(bt,Ft,f,I,M,S,Kt);if(rt===0){kt(bt,Ft,I,X,S,b,Kt);kt(bt,Ft,_,C,a,F,Kt);kt(bt,Ft,_,K,a,k,Kt);kt(bt,Ft,N,V,T,z,Kt);kt(bt,Ft,g,W,d,Q,Kt);kt(bt,Ft,p,Z,v,j,Kt);kt(bt,Ft,p,q,v,J,Kt);kt(bt,Ft,x,tt,l,st,Kt);kt(bt,Ft,r,it,Y,nt,Kt);kt(bt,Ft,D,et,R,ht,Kt);kt(bt,Ft,$,ot,O,Et,Kt);kt(bt,Ft,G,Lt,H,ct,Kt);kt(bt,Ft,G,_t,H,at,Kt);kt(bt,Ft,y,Nt,B,Tt,Kt);kt(bt,Ft,P,It,A,St,Kt);kt(bt,Ft,u,pt,U,vt,Kt);kt(bt,Ft,u,xt,U,lt,Kt);kt(bt,Ft,f,gt,M,dt,Kt);kt(bt,Ft,X,C,b,F,Kt);kt(bt,Ft,K,V,k,z,Kt);kt(bt,Ft,W,Z,Q,j,Kt);kt(bt,Ft,q,tt,J,st,Kt);kt(bt,Ft,0,0,0,0,Kt);kt(bt,Ft,it,et,nt,ht,Kt);kt(bt,Ft,ot,Lt,Et,ct,Kt);kt(bt,Ft,_t,Nt,at,Tt,Kt);kt(bt,Ft,It,pt,St,vt,Kt);kt(bt,Ft,xt,gt,lt,dt,Kt)}if(this.OPTIONS.withHole){const zt=(t+i+e+o+L)*.2,Wt=(s+n+h+E+c)*.2;const Qt=(t+L+_+N+I)*.2,Zt=(s+c+a+T+S)*.2;const jt=(t+i+p+x+g)*.2,qt=(s+n+v+l+d)*.2;const Jt=(i+e+r+D+m)*.2,ts=(n+h+Y+R+w)*.2;const ss=(e+o+G+y+$)*.2,is=(h+E+H+B+O)*.2;const ns=(o+L+u+f+P)*.2,es=(E+c+U+M+A)*.2;this.appendCircle(this.svg,this.INNER_LINE_STYLE,zt,Wt,Dt,null);this.appendCircle(this.svg,this.INNER_LINE_STYLE,Qt,Zt,Dt,null);this.appendCircle(this.svg,this.INNER_LINE_STYLE,jt,qt,Dt,null);this.appendCircle(this.svg,this.INNER_LINE_STYLE,Jt,ts,Dt,null);this.appendCircle(this.svg,this.INNER_LINE_STYLE,ss,is,Dt,null);this.appendCircle(this.svg,this.INNER_LINE_STYLE,ns,es,Dt,null)}}}setTextsInfo(){const{infos:e,SIDE_LENGTH:t,setSvgTextInfo:h}=this;const{HALF_SIDE_LENGTH:s,LONG_SIDE_LENGTH:i,HALF_LONG_SIDE_LENGTH:n,SIN18_MULTIPLY_SIDE_LENGTH:o,SIN72_MULTIPLY_SIDE_LENGTH:E,SIN54_MULTIPLY_QUARTER_SIDE_LENGTH:L,SECOND_GROUP_OFFSET:c,TOP:_}=this.data;const a=L+n;const N=L+o+t;const T=L+i+s;const I=T+s+o;const S=T+s+n;const p=c+L;const v=p+n;const x=p+o+t;const l=p+i+s;const g=p+i+t+o;const d=p+i+t+n;const r=_+n*.8;const Y=_+n*1.2;const D=_+n+E;const R=_+n*.75+i;const w=_+n*.8+E+i;const G=D+i;[{x:T,y:D,rotate:0},{x:I,y:r,rotate:180},{x:N,y:r,rotate:180},{x:S,y:R,rotate:180},{x:a,y:R,rotate:180},{x:T,y:w,rotate:180},{x:l,y:Y,rotate:0},{x:v,y:D,rotate:0},{x:d,y:D,rotate:0},{x:x,y:G,rotate:0},{x:g,y:G,rotate:0},{x:l,y:R,rotate:180}].map(({x:t,y:s,rotate:i},n)=>{h(e[n],t,s,i)})}}class DiceFace20 extends DiceBase{drawGraphs(){this.fixTextStyle(.45);const{SIDE_LENGTH:t}=this;const s=t<3?1:t<=10?.5:.25;const i=this.SIDE_LENGTH*s;const n=i*this.mmToPxScale;const e=Math.PI*60/180;const h=Math.sin(e);const o=Math.cos(e);const E=this.SIDE_LENGTH*o;const L=this.SIDE_LENGTH*h;const c=i*o;const _=i*h;const a=this.SIDE_LENGTH*(1-s);const N=a*o;const T=a*h;const I=L*2;const S=L*3;this.pasteRegionShortBiasX=c;let p=0,v=0,x=0,l=0;const g=this.SIDE_LENGTH*5;p=N+i,v=p+g;x=L,l=x;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);p=p-E,v=p+g;x+=L,l=x;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);p-=E,v=p-E;x=L,l=I;for(let t=0;t<5;++t){p+=this.SIDE_LENGTH,v+=this.SIDE_LENGTH;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox)}p=c,v=p+E;x=I,l=S;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);p+=E,v+=E*2;x=L,l=x+I;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);p-=E;x=0;for(let t=0;t<3;++t){p+=this.SIDE_LENGTH,v+=this.SIDE_LENGTH;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox)}p+=this.SIDE_LENGTH,v+=E;l=I;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);p+=this.SIDE_LENGTH,v+=E;l=L;this.appendLine(this.svg,this.INNER_LINE_STYLE,p,v,x,l,this.viewBox);const d=E*this.mmToPxScale;const r=L*this.mmToPxScale;const Y=c*this.mmToPxScale;const D=_*this.mmToPxScale;const R=N*this.mmToPxScale;const w=T*this.mmToPxScale;const G=document.createElementNS(SVG_NS,"path");G.setAttribute("fill","none");G.setAttribute("stroke","#000000");G.setAttribute("d",`M 0, ${r+w} `.concat(` l ${R}, -${w}`,` h ${n}`,` l ${d}, -${r}`,` h ${n}`,` l ${R}, ${w}`,` l -${Y}, ${D}`,` l ${d}, -${r}`,` h ${n}`,` l ${R}, ${w}`,` l -${Y}, ${D}`,` l ${d}, -${r}`,` h ${n}`,` l ${R}, ${w}`,` l -${Y}, ${D}`,` l ${d}, -${r}`,` h ${n}`,` l ${R}, ${w}`,` l -${Y}, ${D}`,` l ${d}, -${r}`,` h ${n}`,` l ${R}, ${w}`,` l -${Y+d*2}, ${D+r*2}`,` h -${n}`,` l -${R}, -${w}`,` l ${Y}, -${D}`,` l -${d}, ${r}`,` h -${n}`,` l -${R}, -${w}`,` l ${Y}, -${D}`,` l -${d}, ${r}`,` h -${n}`,` l -${R}, -${w}`,` l ${Y}, -${D}`,` l -${d}, ${r}`,` h -${n}`,` l -${R}, -${w}`,` l ${Y}, -${D}`,` l -${d}, ${r}`,` h -${n}`,` l -${R}, -${w}`,` l ${Y}, -${D}`," z"));this.svg.appendChild(G);this.viewBox.right=this.SIDE_LENGTH*5+E+i;this.viewBox.bottom=L*3}setTextsInfo(){const{infos:e,SIDE_LENGTH:t,setSvgTextInfo:h}=this;const s=this.pasteRegionShortBiasX;const i=t*.5;const n=s+i;const o=n+i;const E=o+i;const L=E+i;const c=L+i;const _=c+i;const a=_+i;const N=a+i;const T=N+i;const I=T+i;const S=Math.sin(Math.PI*60/180);const p=t*S*.7;const v=t*S*1.3;const x=t*S*1.7;const l=t*S*2.3;[{x:o,y:p,rotate:0},{x:I,y:v,rotate:180},{x:_,y:v,rotate:180},{x:c,y:l,rotate:180},{x:L,y:p,rotate:0},{x:N,y:v,rotate:180},{x:L,y:v,rotate:180},{x:E,y:l,rotate:180},{x:_,y:p,rotate:0},{x:o,y:v,rotate:180},{x:a,y:x,rotate:0},{x:n,y:l,rotate:180},{x:N,y:p,rotate:0},{x:T,y:x,rotate:0},{x:E,y:x,rotate:0},{x:T,y:l,rotate:180},{x:I,y:p,rotate:0},{x:n,y:x,rotate:0},{x:c,y:x,rotate:0},{x:a,y:l,rotate:180}].map(({x:t,y:s,rotate:i},n)=>{h(e[n],t,s,i)})}}class DiceFace24 extends DiceBase{drawGraphs(){this.fixTextStyle(.8);const{SIDE_LENGTH:m}=this;const{getSinByAngle:t,getCosByAngle:s}=this;const M=m/25;const i=180-48.275*2;const P=Math.cos(48.275*Math.PI/180);const A=m;const n=A/P;let e=0,h=0,o=0,E=0,L=0,c=0,_=0,a=0,N=0,T=0,I=0,S=0;let p=0,v=0,x=0,l=0,g=0,d=0,r=0,Y=0,D=0,R=0,X=0,b=0;let C=-3,F=-2;C*=1.5,F*=1.5;const K=-23.080501973030117*M;const k=m*6;const V=k+K,z=0;const W=V+m*2,Q=0;const w=V+A,G=n*t(48.275);const Z=i-48.275;const j=w-n*s(Z),q=G+n*t(Z);const J=180-i-Z;const tt=w+n*s(J),st=G+n*t(J);const it=i-J;const nt=w+n*s(it),et=G-n*t(it);const ht=V+j-w;const ot=0+q-G;const Et=V+(ht-V)*.3,Lt=0+(ot-0)*.3;const ct=0,_t=0;const at=j+(ht-j)*.3,Nt=q+(ot-q)*.3;const Tt=W+(w-W)*.3,It=0+(G-0)*.3;const St=tt+nt-w;const pt=st+et-G;const vt=tt+(St-tt)*.3,xt=st+(pt-st)*.3;const lt=nt+(St-nt)*.3,gt=et+(pt-et)*.3;e=V,h=z,o=W,E=Q,L=w,c=G,_=j,a=q,N=tt,T=st,I=nt,S=et;p=Et,v=Lt,x=ct,l=_t,g=at,d=Nt,r=vt,Y=xt,D=Tt,R=It,X=lt,b=gt;this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,_,h,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,N,a,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,p,h,v,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,_,g,a,d,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,p,g,v,d,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,r,X,Y,b,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,N,r,T,Y,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,X,S,b,this.viewBox);const H=j+tt-w,y=q+st-G;const dt=tt,rt=st;const Yt=j,Dt=q;const Rt=Math.atan((y-Dt)/(H-Yt))*180/Math.PI;const wt=i-Rt;const Gt=i-(90-wt);const Ht=i-(90-Rt);const yt=i-(90-Ht);const Bt=H-n*s(wt);const $t=y+n*t(wt);const Ot=H+n*t(Gt);const ut=y+n*s(Gt);const Ut=H+n*s(yt);const ft=y+n*t(yt);const mt=Ut+(H-Ut)*.3,Mt=ft+(y-ft)*.3;e=dt,h=rt,o=Ut,E=ft,L=H,c=y,_=Yt,a=Dt,N=Bt,T=$t,I=Ot,S=ut;D=mt,R=Mt;this.appendLine(this.svg,this.INNER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,N,a,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);const B=dt+Ut-H,$=rt+ft-y;const Pt=dt,At=rt;const Xt=Ut,bt=ft;const Ct=Math.atan(($-At)/(B-Pt))*180/Math.PI;const Ft=i-Ct;const Kt=i-(90-Ft);const kt=i-(90-Ct);const Vt=i-(90-kt);const zt=B+n*t(kt);const Wt=$-n*s(kt);const Qt=B+n*s(Vt);const Zt=$+n*t(Vt);const jt=B+n*t(Kt);const qt=$+n*s(Kt);const Jt=Qt+(B-Qt)*.3,ts=Zt+($-Zt)*.3;const ss=zt+Qt-B,is=Wt+Zt-$;const ns=zt+(ss-zt)*.3,es=Wt+(is-Wt)*.3;const hs=Qt+(ss-Qt)*.3,os=Zt+(is-Zt)*.3;e=zt,h=Wt,o=Qt,E=Zt,L=B,c=$,_=Pt,a=At,N=Xt,T=bt,I=jt,S=qt;p=ns,v=es,x=hs,l=os,D=Jt,R=ts;this.appendLine(this.svg,this.INNER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,_,h,a,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,N,a,T,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,p,h,v,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,x,E,l,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,p,x,v,l,this.viewBox);const O=Bt+Ot-H,u=$t+ut-y;const Es=Ot,Ls=ut;const cs=Bt,_s=$t;const as=Math.atan((u-Ls)/(Es-O))*180/Math.PI;const Ns=Math.atan((u-_s)/(O-cs))*180/Math.PI;const Ts=i-as;const Is=i-Ns;const Ss=i-(90-Ts);const ps=O+n*s(Ts);const vs=u+n*t(Ts);const xs=O-n*t(Ss);const ls=u+n*s(Ss);const gs=O-n*s(Is);const ds=u+n*t(Is);const rs=xs+(O-xs)*.3,Ys=ls+(u-ls)*.3;const Ds=ps+Es-O,Rs=vs+Ls-u;const ws=ps+(Ds-ps)*.3,Gs=vs+(Rs-vs)*.3;const Hs=Es+(Ds-Es)*.3,ys=Ls+(Rs-Ls)*.3;const Bs=cs+gs-O,$s=_s+ds-u;const Os=cs+(Bs-cs)*.3,us=_s+($s-_s)*.3;const Us=gs+(Bs-gs)*.3,fs=ds+($s-ds)*.3;e=ps,h=vs,o=xs,E=ls,L=O,c=u,_=Es,a=Ls,N=cs,T=_s,I=gs,S=ds;p=ws,v=Gs,g=Hs,d=ys,r=Os,Y=us,D=rs,R=Ys,X=Us,b=fs;this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,_,h,a,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,p,h,v,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,_,g,a,d,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,p,g,v,d,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,r,X,Y,b,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,N,r,T,Y,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,X,S,b,this.viewBox);const ms=Yt+Bt-H,Ms=Dt+$t-y;const Ps=Yt,As=Dt;const Xs=Bt,bs=$t;const Cs=Math.atan((Ms-As)/(Ps-ms))*180/Math.PI;const Fs=i-Cs;const Ks=180-i-Fs;const ks=i-Ks;const Vs=i-(90-ks);const zs=ms-n*s(ks);const Ws=Ms-n*t(ks);const Qs=ms+n*t(Vs);const Zs=Ms-n*s(Vs);const js=ms-n*s(Ks);const qs=Ms+n*t(Ks);const Js=Qs+(ms-Qs)*.3,ti=Zs+(Ms-Zs)*.3;e=zs,h=Ws,o=Qs,E=Zs,L=ms,c=Ms,_=js,a=qs,N=Xs,T=bs,I=Ps,S=As;D=Js,R=ti;this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,_,h,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,_,N,a,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);const U=zs+js-ms,f=Ws+qs-Ms;const si=zs,ii=Ws;const ni=js,ei=qs;const hi=Math.atan((f-ii)/(si-U))*180/Math.PI;const oi=i-hi;const Ei=180-i-oi;const Li=i-Ei;const ci=i-(90-Li);const _i=U-n*s(Li);const ai=f-n*t(Li);const Ni=U+n*t(ci);const Ti=f-n*s(ci);const Ii=U-n*s(Ei);const Si=f+n*t(Ei);const pi=Ni+(U-Ni)*.3,vi=Ti+(f-Ti)*.3;const xi=_i+Ni-U,li=ai+Ti-f;const gi=_i+(xi-_i)*.3,di=ai+(li-ai)*.3;const ri=Ni+(xi-Ni)*.3,Yi=Ti+(li-Ti)*.3;const Di=Ii+ni-U,Ri=Si+ei-f;const wi=Ii+(Di-Ii)*.3,Gi=Si+(Ri-Si)*.3;const Hi=ni+(Di-ni)*.3,yi=ei+(Ri-ei)*.3;e=_i,h=ai,o=Ni,E=Ti,L=U,c=f,_=Ii,a=Si,N=ni,T=ei,I=si,S=ii;p=gi,v=di,x=ri,l=Yi,g=wi,d=Gi,r=Hi,Y=yi,D=pi,R=vi;this.appendLine(this.svg,this.INNER_LINE_STYLE,e,o,h,E,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,_,h,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,e,L,h,c,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,L,E,c,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,_,c,a,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,N,c,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,L,I,c,S,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,_,N,a,T,this.viewBox);this.appendLine(this.svg,this.INNER_LINE_STYLE,N,I,T,S,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,I,D,S,R,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,e,p,h,v,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,o,x,E,l,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,p,x,v,l,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,_,g,a,d,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,N,r,T,Y,this.viewBox);this.appendLine(this.svg,this.OUTER_LINE_STYLE,g,r,d,Y,this.viewBox)}setTextsInfo(){const{infos:e,SIDE_LENGTH:t,setSvgTextInfo:h}=this;const o=t/25;[{x:195,y:70,angle:180},{x:85,y:44,angle:180},{x:132,y:138,angle:-70.35},{x:171,y:36,angle:-70.35},{x:158,y:84,angle:-83.45},{x:12,y:61,angle:83.45},{x:26,y:38,angle:166.9},{x:143,y:63,angle:193.1},{x:148,y:45,angle:13.1},{x:125,y:115,angle:206.2},{x:105,y:70,angle:-70.35},{x:175,y:85,angle:96.55},{x:66,y:63,angle:96.55},{x:215.5,y:88,angle:263.45},{x:153,y:7.5,angle:180},{x:108,y:152,angle:13.1},{x:30,y:78,angle:0},{x:130,y:100,angle:26.2},{x:122,y:75,angle:109.65},{x:52,y:59,angle:-83.45},{x:97.5,y:121,angle:122.75},{x:131,y:28,angle:96.55},{x:191,y:110,angle:13.1},{x:81.5,y:83.5,angle:13.1}].forEach(({x:t,y:s,angle:i},n)=>{h(e[n],o*t,o*s,i)})}}class DiceFace10 extends DiceBase{drawGraphs(){this.fixTextStyle(.45);const{max:m,min:M,sin:t,cos:s,tan:P,atan:i,PI:n,abs:A}=Math;const{SIDE_LENGTH:X,svg:e,viewBox:h,appendLine:o,OUTER_LINE_STYLE:E,INNER_LINE_STYLE:L}=this;const b=X<3?1:X<=10?.5:.25;const c=X*b;const _=X*2.55;const a=X*2.55;const C=50.22;const N=50.22*n/180;const T=N*.5;const F=94.7*n/180;const K=(n-T-F)*2;const I=n*.5;const S=45*n/180;const k=I-T;const V=F-k;const z=X*t(V);const W=X*s(V);const p=W/t(T);const Q=p*t(k);const v=z+Q;const Z=T;const j=_,q=a+v;const J=p*t(Z);const tt=p*s(Z);const st=_-J,x=_+J;const it=a+tt,l=a+tt;const nt=N;const g=_+v*t(nt);const d=a+v*s(nt);const et=N*1.5;const r=_+p*t(et);const Y=a+p*s(et);const ht=N*2-I;const D=_+v*s(ht);const R=a-v*t(ht);const ot=N*2.5-I;const w=_+p*s(ot);const G=a-p*t(ot);const Et=N*3-I;const H=_+v*s(Et);const y=a-v*t(Et);const Lt=n-N*3.5;const B=_+p*t(Lt);const $=a-p*s(Lt);const ct=N*4-n;const O=_-v*t(ct);const u=a-v*s(ct);const _t=N*4.5-n;const at=_-p*t(_t);const Nt=a-p*s(_t);const U=st+j-_;const f=it+q-a;const Tt=st,It=it;const St=j,pt=q;const vt=U*2-St,xt=pt;const lt=N;const gt=U+v*t(lt);const dt=f-v*s(lt);const rt=N*1.5;const Yt=U+p*t(rt);const Dt=f-p*s(rt);const Rt=N*2-I;const wt=U+v*s(Rt);const Gt=f+v*t(Rt);const Ht=N*2.5-I;const yt=U+p*s(Ht);const Bt=f+p*t(Ht);const $t=N*3-I;const Ot=U+v*s($t);const ut=f+v*t($t);const Ut=n-N*3.5;const ft=U+p*t(Ut);const mt=f+p*s(Ut);const Mt=N*4-n;const Pt=U-v*t(Mt);const At=f+v*s(Mt);const Xt=N*4.5-n;const bt=U-p*t(Xt);const Ct=f+p*s(Xt);const Ft=S-T;const Kt=vt-c*t(Ft);const kt=xt+c*s(Ft);const Vt=S+T;const zt=U-c*t(Vt);const Wt=f-c*s(Vt);const Qt=S+T;const Zt=_-c*t(Qt);const jt=a+c*s(Qt);const qt=n-(S+F+N*4.5-n);const Jt=at+c*t(qt);const ts=Nt-c*s(qt);const ss=S-T;const is=st-c*t(ss);const ns=it-c*s(ss);const es=K*.5+S-I;const hs=j+c*s(es);const os=q+c*t(es);const Es=n-(S+F+T);const Ls=x-c*t(Es);const cs=l+c*s(Es);const _s=n-(S+F-T);const as=x+c*t(_s);const Ns=l+c*s(_s);const Ts=i((g-x)/(l-d))-S;const Is=g-c*t(Ts);const Ss=d+c*s(Ts);const ps=i((r-g)/(d-Y));const vs=ps-S;const xs=g+c*s(vs);const ls=d+c*t(vs);const gs=S-ps;const ds=r+c*t(gs);const rs=Y+c*s(gs);const Ys=i((D-r)/(Y-R));const Ds=S-Ys;const Rs=r+c*s(Ds);const ws=Y-c*t(Ds);const Gs=I-(Ys+S);const Hs=D+c*t(Gs);const ys=R+c*s(Gs);const Bs=i((D-w)/(R-G));const $s=I-(Bs+S);const Os=D+c*t($s);const us=R-c*s($s);const Us=Bs-S;const fs=w+c*s(Us);const ms=G-c*t(Us);const Ms=i((w-H)/(G-y));const Ps=I-(Ms+S);const As=w+c*t(Ps);const Xs=G-c*s(Ps);const bs=S-Ms;const Cs=H+c*s(bs);const Fs=y+c*t(bs);const Ks=i((H-B)/(y-$));const ks=S+Ks;const Vs=H-c*s(ks);const zs=y+c*t(ks);const Ws=S+Ks;const Qs=B+c*s(Ws);const Zs=$+c*t(Ws);const js=i((B-O)/($-u));const qs=S+js;const Js=B+c*s(qs);const ti=$-c*t(qs);const si=js-S;const ii=O+c*s(si);const ni=u-c*t(si);const ei=i((O-at)/(Nt-u));const hi=ei-S;const oi=O-c*s(hi);const Ei=u-c*t(hi);o(e,E,hs,j,os,q,h);o(e,E,hs,Ls,os,cs,h);o(e,E,Ls,x,cs,l,h);o(e,E,x,as,l,Ns,h);o(e,E,as,Is,Ns,Ss,h);o(e,E,Is,g,Ss,d,h);o(e,E,g,xs,d,ls,h);o(e,E,xs,ds,ls,rs,h);o(e,E,ds,r,rs,Y,h);o(e,E,r,Rs,Y,ws,h);o(e,E,Rs,Hs,ws,ys,h);o(e,E,Hs,D,ys,R,h);o(e,E,D,Os,R,us,h);o(e,E,Os,fs,us,ms,h);o(e,E,fs,w,ms,G,h);o(e,E,w,As,G,Xs,h);o(e,E,As,Cs,Xs,Fs,h);o(e,E,Cs,H,Fs,y,h);o(e,E,H,Vs,y,zs,h);o(e,E,Vs,Qs,zs,Zs,h);o(e,E,Qs,B,Zs,$,h);o(e,E,B,Js,$,ti,h);o(e,E,Js,ii,ti,ni,h);o(e,E,ii,O,ni,u,h);o(e,E,O,oi,u,Ei,h);o(e,E,oi,Jt,Ei,ts,h);o(e,E,Jt,at,ts,Nt,h);o(e,E,_,at,a,Nt,h);o(e,L,at,O,Nt,u,h);o(e,L,O,B,u,$,h);o(e,L,B,H,$,y,h);o(e,L,H,w,y,G,h);o(e,L,w,D,G,R,h);o(e,L,D,r,R,Y,h);o(e,L,r,g,Y,d,h);o(e,L,g,x,d,l,h);o(e,L,x,j,l,q,h);o(e,L,j,st,q,it,h);o(e,L,_,B,a,$,h);o(e,L,_,w,a,G,h);o(e,L,_,r,a,Y,h);o(e,L,_,x,a,l,h);o(e,L,_,st,a,it,h);o(e,E,U,bt,f,Ct,h);o(e,E,bt,Pt,Ct,At,h);o(e,E,Pt,ft,At,mt,h);o(e,E,ft,Ot,mt,ut,h);o(e,E,Ot,yt,ut,Bt,h);o(e,E,yt,wt,Bt,Gt,h);o(e,E,wt,Yt,Gt,Dt,h);o(e,E,Yt,gt,Dt,dt,h);o(e,E,gt,St,dt,pt,h);o(e,L,St,Tt,pt,It,h);o(e,E,Tt,vt,It,xt,h);o(e,L,U,ft,f,mt,h);o(e,L,U,yt,f,Bt,h);o(e,L,U,Yt,f,Dt,h);o(e,L,U,St,f,pt,h);o(e,L,U,vt,f,xt,h);o(e,E,_,Zt,a,jt,h);o(e,E,Zt,is,jt,ns,h);o(e,E,is,st,ns,it,h);o(e,E,Jt,at,ts,Nt,h);o(e,E,U,zt,f,Wt,h);o(e,E,zt,Kt,Wt,kt,h);o(e,E,Kt,vt,kt,xt,h);this.textData={X_A1:st,X_A2:vt,X_C1:x,X_C2:St,X_E1:r,X_E2:Yt,X_G1:w,X_G2:yt,X_I1:B,X_I2:ft,X_K1:at,X_K2:bt,Y_A1:it,Y_A2:xt,Y_C1:l,Y_C2:pt,Y_E1:Y,Y_E2:Dt,Y_G1:G,Y_G2:Bt,Y_I1:$,Y_I2:mt,Y_K1:Nt,Y_K2:Ct,ANGLE_SMALL_DEGREE:C}}textData;setTextsInfo(){const{infos:e,setSvgTextInfo:h}=this;const{X_A1:t,X_A2:s,X_C1:i,X_C2:n,X_E1:o,X_E2:E,X_G1:L,X_G2:c,X_I1:_,X_I2:a,X_K1:N,X_K2:T,Y_A1:I,Y_A2:S,Y_C1:p,Y_C2:v,Y_E1:x,Y_E2:l,Y_G1:g,Y_G2:d,Y_I1:r,Y_I2:Y,Y_K1:D,Y_K2:R,ANGLE_SMALL_DEGREE:w}=this.textData;[{x:(s+n)*.5,y:(S+v)*.5,rotate:0},{x:(L+_)*.5,y:(g+r)*.5,rotate:360-w*3},{x:(E+c)*.5,y:(l+d)*.5,rotate:w*2},{x:(t+i)*.5,y:(I+p)*.5,rotate:0},{x:(a+T)*.5,y:(Y+R)*.5,rotate:w*4},{x:(i+o)*.5,y:(p+x)*.5,rotate:-w},{x:(c+a)*.5,y:(d+Y)*.5,rotate:w*3},{x:(_+N)*.5,y:(r+D)*.5,rotate:360-w*4},{x:(n+E)*.5,y:(v+l)*.5,rotate:w},{x:(o+L)*.5,y:(x+g)*.5,rotate:360-w*2}].map(({x:t,y:s,rotate:i},n)=>{h(e[n],t,s,i)})}}var DiceKind;(function(t){t[t["none"]=0]="none";t[t["four"]=1]="four";t[t["six"]=2]="six";t[t["eight"]=4]="eight";t[t["twelve"]=8]="twelve";t[t["twenty"]=16]="twenty";t[t["twentyFour"]=32]="twentyFour";t[t["ten"]=64]="ten";t[t["fourteen"]=128]="fourteen";t[t["sixteen"]=256]="sixteen";t[t["twentySix"]=512]="twentySix";t[t["sixty"]=1024]="sixty"})(DiceKind||(DiceKind={}));const DiceKindCount=11;const DefaultDiceKind=2047;class DiceGenerator{batchCreate(t){t.forEach((t,s)=>{if(t.id.length===0)t.id=`svg_index`});return t.map(t=>this.create(t))}create({id:t,diceKind:s,sideLength:i,contents:n,outerLineStyle:e,innerLineStyle:h,textStyle:o,options:E}){if(t.length===0)t="svg_0";const L=this.createSvg();L.setAttribute("id",t);const c={left:999999,right:0,top:999999,bottom:0};const _=[];switch(s){case DiceKind.four:n.forEach(s=>{for(let t=0;t<3;++t){_.push({content:s,x:0,y:0,rotate:0})}});break;default:n.forEach(t=>{_.push({content:t,x:0,y:0,rotate:0})});break}const a=E.PASTE_WIDTH||0;const N=(new DPIHelper).getMmToPxScale();switch(s){case DiceKind.four:new DiceFace4(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.six:new DiceFace6(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.eight:new DiceFace8(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.ten:new DiceFace10(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.twelve:new DiceFace12(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.twenty:new DiceFace20(L,i,h,e,c,E,N,_,n,a,o).draw();break;case DiceKind.twentyFour:new DiceFace24(L,i,h,e,c,E,N,_,n,a,o).draw();break;default:break}const T=`${c.right}mm`;const I=`${c.bottom}mm`;L.setAttribute("width",T);L.setAttribute("height",I);const S="page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}";const p={id:t,svg:L,css:S};return p}createSvg=()=>{const t=document.createElementNS(SVG_NS,"svg");t.setAttribute("version","1.1");t.setAttribute("xmlns",SVG_NS);t.setAttribute("xmlns:xlink",SVG_XLINKNS);return t}}